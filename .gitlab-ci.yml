stages:
- build
- docker
- test
- publish

#--------------------------
# Build templates
#--------------------------

.build-template: &build-template_definition
  stage: build
  script:
    - ci/fedora-packages.sh
    - ci/common-rpm-build.sh
    - mkdir ${CI_JOB_NAME}
    - cp -rv build/RPMS build/SRPMS ${CI_JOB_NAME}
    - tree ${CI_JOB_NAME}
  variables:
    BRANCH: ${CI_COMMIT_REF_NAME}
  artifacts:
    paths:
      - "$CI_JOB_NAME"

#--------------------------
# Build jobs
#--------------------------

alma9:
  image: gitlab-registry.cern.ch/linuxsupport/alma9-base
  <<: *build-template_definition

#--------------------------
# Docker build templates
#--------------------------

.kaniko_build: &kaniko_build-template
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - if [[ -z "$CI_COMMIT_TAG" ]]; then CACHE="true"; else CACHE="false"; fi
    - printf "CACHE=${CACHE}\nDESTINATION=${DESTINATION}\nDMCREPO=${DMC_REPO}\n"
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --dockerfile ci/docker/${IMAGE} --context "${CI_PROJECT_DIR}" --cache=${CACHE} --destination ${DESTINATION} --build-arg dmcrepo=${DMC_REPO}
  retry: 1

#--------------------------
# Docker build jobs
#--------------------------

docker_latest:
  <<: *kaniko_build-template
  variables:
    DMC_REPO: https://dmc-repo.web.cern.ch/dmc-repo/dmc-devel-el9.repo
    DESTINATION: gitlab-registry.cern.ch/fts/fts3:latest
    IMAGE: Dockerfile-ci
  needs:
    - job: alma9
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"

docker_tag:
  <<: *kaniko_build-template
  variables:
    DMC_REPO: https://dmc-repo.web.cern.ch/dmc-repo/dmc-rc-el9.repo
    DESTINATION: gitlab-registry.cern.ch/fts/fts3:${CI_COMMIT_TAG}
    IMAGE: Dockerfile-ci
  needs:
    - job: alma9
  rules:
    - if: $CI_COMMIT_TAG != null

#--------------------------
# Testing templates
#--------------------------

.test-template: &test-template_definition
  stage: test
  script:
    - dnf install -y git createrepo epel-release
    - ci/write-repo-file.sh
    - ARTIFACTS="${CI_JOB_NAME%%-test}"
    - mkdir -p /repo/fts ; cp -v ${ARTIFACTS}/RPMS/*/*.rpm /repo/fts ; createrepo /repo/fts
    - echo -e "[fts]\nname=FTS\nbaseurl=file:///repo/fts\ngpgcheck=0\nenabled=1\npriority=2" > /etc/yum.repos.d/fts.repo
    - dnf install -y fts-tests
    - fts-unit-tests --log_level=all --report_level=detailed

#--------------------------
# Testing jobs
#--------------------------

alma9-test:
  image: gitlab-registry.cern.ch/linuxsupport/alma9-base
  needs:
    - job: alma9
  <<: *test-template_definition

#--------------------------
# Publish templates
#--------------------------

.publish-template: &publish-template_definition
  stage: publish
  image: gitlab-registry.cern.ch/eos/gitlab-eos/alma9:latest
  dependencies:
    - alma9
  script:
    - automount
    - cat "$repo_passwd" | kinit "$repo_user"
    - packaging/fts-repo-manager.py --action add --base /eos/workspace/f/fts/repo/www/repos/ --ref ${CI_COMMIT_REF_NAME} --packages alma9/RPMS/*/*.rpm alma9/SRPMS/*
  tags:
    - docker-privileged-xl
  retry: 2

#--------------------------
# Publish jobs
#--------------------------

rpms:
  <<: *publish-template_definition
  rules:
    - if: '$CI_PROJECT_NAMESPACE != "fts"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_TAG != null'
    - if: '$CI_COMMIT_REF_NAME == "FTS-1925_token_project" || $CI_COMMIT_TAG != null'
    - if: '$CI_COMMIT_REF_NAME != "develop" && $CI_COMMIT_TAG == null'
      when: manual
